name: Create Release
run-name: Create Release

on:
  workflow_dispatch:
    inputs:
      RELEASE_LIBRARY:
        required: true
        type: boolean
        description: Release library
      RELEASE_STORYBOOK:
        required: true
        type: boolean
        description: Release Storybook
      STORYBOOK_RELEASE_PATH:
        required: false
        type: string
        description: Storybook release path
      NODE_VERSION:
        required: false
        type: string
        default: "20"
        description: NodeJS version

  workflow_call:
    inputs:
      RELEASE_LIBRARY:
        required: true
        type: boolean
      RELEASE_STORYBOOK:
        required: true
        type: boolean
      STORYBOOK_RELEASE_PATH:
        required: false
        type: string
      NODE_VERSION:
        required: false
        type: string
        default: "20"
        description: NodeJS version
    outputs:
      new_release_version:
        description: "Version of the new release"
        value: ${{ jobs.release.outputs.release_version_output }}
      new_release_status:
        description: "Status of the new release"
        value: ${{ jobs.release.outputs.release_status_output }}
    secrets:
      CDK_AWS_ACCESS_KEY_ID:
        required: true
      CDK_AWS_SECRET_ACCESS_KEY:
        required: true

permissions:
  contents: write
  id-token: write
  issues: write
  discussions: write
  packages: write
  pages: write
  pull-requests: write
  security-events: write
  statuses: write
  checks: write
  deployments: write

jobs:
  validate_inputs:
    name: Validate Inputs
    runs-on: ubuntu-latest
    steps:
      - name: Validate RELEASE_LIBRARY and RELEASE_STORYBOOK
        run: |
          if ! ( [[ "${{ inputs.RELEASE_LIBRARY }}" == "true" || "${{ inputs.RELEASE_STORYBOOK }}" == "true" ]] ); then
            echo "At least one of RELEASE_LIBRARY or RELEASE_STORYBOOK must be True!"
            exit 1
          fi

      - name: Validate STORYBOOK_RELEASE_PATH
        run: |
          if [[ "${{ inputs.RELEASE_LIBRARY }}" == "false" && "${{ inputs.RELEASE_STORYBOOK }}" == "true" && -z "${{ inputs.STORYBOOK_RELEASE_PATH }}" ]]; then
            echo "STORYBOOK_RELEASE_PATH is required when RELEASE_LIBRARY is False and RELEASE_STORYBOOK is True!"
            exit 1
          fi

  validate_lib:
    name: Validate Lib
    needs: validate_inputs

    uses: ./.github/workflows/validate-project-template.yml
    with:
      NODE_VERSION: "20"
    secrets:
      CDK_AWS_ACCESS_KEY_ID: ${{ secrets.CDK_AWS_ACCESS_KEY_ID }}
      CDK_AWS_SECRET_ACCESS_KEY: ${{ secrets.CDK_AWS_SECRET_ACCESS_KEY }}

  # integration_tests:
  #   name: Integration Tests
  #   needs: validate_lib

  #   uses: ./.github/workflows/integration-tests-check.yml
  #   secrets:
  #     AWS_ACCESS_KEY_ID: ${{ secrets.CDK_AWS_ACCESS_KEY_ID }}
  #     AWS_SECRET_ACCESS_KEY: ${{ secrets.CDK_AWS_SECRET_ACCESS_KEY }}

  release:
    name: Release
    # needs: integration_tests
    needs: validate_lib
    runs-on: ubuntu-latest
    outputs:
      release_version_output: ${{ steps.check_if_new_version_was_released.outputs.release_version }}
      release_status_output: ${{ steps.check_if_new_version_was_released.outputs.release_status }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node
        uses: actions/setup-node@v4
        with:
          node-version: ${{ inputs.NODE_VERSION }}

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.CDK_AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.CDK_AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Setup
        run: |
          npm i -g zx
          zx ./scripts/setup.mjs

      - name: Build Library
        run: npm run build

      - name: Release Library
        id: release_library
        if: ${{ inputs.RELEASE_LIBRARY == true }}
        uses: cycjimmy/semantic-release-action@v4
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Check If New Version Was Released
        id: check_if_new_version_was_released
        if: ${{ inputs.RELEASE_LIBRARY == true }}
        run: |
          if [[ -z "${{ steps.release_library.outputs.new_release_version }}" ]]; then
            echo "New version was not released!"
            echo "release_status=failed" >> $GITHUB_OUTPUT
            exit 1
          else
            echo "New version was released!"
            echo "release_status=succeeded" >> $GITHUB_OUTPUT
            echo "release_version=${{ steps.release_library.outputs.new_release_version }}" >> $GITHUB_OUTPUT
          fi

      - name: Set Storybook Release Path
        if: ${{ inputs.RELEASE_STORYBOOK == true }}
        run: |
          if [[ -n "${{ inputs.STORYBOOK_RELEASE_PATH }}" ]]; then
            echo "STORYBOOK_RELEASE_PATH=${{ inputs.STORYBOOK_RELEASE_PATH }}" >> $GITHUB_ENV
          else
            echo "STORYBOOK_RELEASE_PATH=${{ steps.release_library.outputs.new_release_version }}" >> $GITHUB_ENV
          fi

      - name: Build Storybook
        if: ${{ inputs.RELEASE_STORYBOOK == true }}
        run: npm run build:storybook

      - name: Release Storybook
        if: ${{ inputs.RELEASE_STORYBOOK == true }}
        run: |
          zx ./scripts/deploy.mjs
        env:
          ENV: DEV
          NAMESPACE: ""
